package test;

import main.Application;
import main.Component;
import main.ComponentConnection;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;;

class ApplicationTest {

    List<Component> inputComponents;
    List<ComponentConnection> inputConnections;

    List<Component> inputErroneousComponents;
    List<ComponentConnection> inputErroneousConnections;

    List<Component> inputReplacementComponents;
    List<ComponentConnection> inputReplacementConnections;

    Application app = new Application();

    @BeforeAll
    void initAll() throws IOException {
	app.parseComponentInputFile("inputs/GI0.in", inputComponents,
		inputConnections);
	app.parseComponentInputFile("inputs/GC0.in", inputErroneousComponents,
		inputErroneousConnections);
	app.parseComponentInputFile("inputs/GR0.in", inputReplacementComponents,
		inputReplacementConnections);
    }

    @Test
    void createOutputFileContentTest() {
	int numReplacements = 5;
	List<List<ComponentConnection>> emptyMatchedErroneousComponents = new ArrayList<List<ComponentConnection>>();

	String stringOutput1 = app.createOutputFileContent(numReplacements,
		emptyMatchedErroneousComponents);
	String stringOutput2 = app.createOutputFileContent(numReplacements,
		emptyMatchedErroneousComponents);

	int parsedNumReplacements = Integer
		.parseInt(stringOutput1.split("\n")[0]);

	assertNotNull(stringOutput1);
	assertEquals(stringOutput1, stringOutput2);

	assertEquals(parsedNumReplacements, numReplacements);
	
	List<List<ComponentConnection>> matchedErroneousComponents = new ArrayList<List<ComponentConnection>>();
	List<ComponentConnection> matchedComponentList =new ArrayList<ComponentConnection>();
	matchedComponentList.add(new ComponentConnection(1, 4));
	matchedComponentList.add(new ComponentConnection(2, 6));
	matchedComponentList.add(new ComponentConnection(3, 2));
	matchedErroneousComponents.add(matchedComponentList);
	
	String stringOutput3 = app.createOutputFileContent(numReplacements,
		matchedErroneousComponents);
	
	assertNotNull(stringOutput3);
	assertNotEquals(stringOutput1, stringOutput3);
    }

    @Test
    void countComponentReplacementsTest() {

    }

}
